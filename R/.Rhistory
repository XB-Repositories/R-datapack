cat("\n")
print("AUC for all the numerical attributes (Class variable: Expensive):")
mat <- roc_auc_att(MyDataset)
print(mat)
print("ROC curve for the Weight:")
plot_roc(MyDataset,"Weight")
print("Weight attribute before normalizing:")
print_data(get_attribute(MyDataset, "Weight"))
cat("\n")
print("Weight attribute after normalizing:")
MyDataset <- normalize1(MyDataset,"Weight")
print_data(get_attribute(MyDataset, "Weight"))
print("Quantity attribute before normalizing:")
print_data(get_attribute(MyDataset, "Quantity"))
cat("\n")
print("Weight attribute after standarizing:")
MyDataset <- standarize1(MyDataset,"Quantity")
print_data(get_attribute(MyDataset, "Quantity"))
print("Dataset before discretizing:")
print_dataset(MyDataset)
cat("\n")
print("Dataset after discretizing:")
MyDataset <- discretize1(MyDataset,"Code",method="frequency",num_bins=5)
MyDataset <- discretize1(MyDataset,"Quantity",method="custom",cut_points=c(-1,0,1))
MyDataset <- discretize1(MyDataset,"Weight",method="width",num_bins=4)
print_dataset(MyDataset)
print("Entropy of the non-numerical attributes (including the discretized variables):")
print(entropy_att(MyDataset))
MyDataset <- filter_by(MyDataset,metric="entropy",threshold=2,comparator="gt")
cat("\n")
print("Dataset after applying the filter:")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Code")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Fruit")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Expensive")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
t <- to_dataframe(MyDataset)
View(t)
class(t)
print("Code:")
print_data(get_attribute(MyDataset,"Code"))
cat("\n")
print("Fruit:")
print_data(get_attribute(MyDataset,"Fruit"))
cat("\n")
print("Quantity:")
print_data(get_attribute(MyDataset,"Quantity"))
cat("\n")
print("Weight:")
print_data(get_attribute(MyDataset,"Weight"))
cat("\n")
print("Color:")
print_data(get_attribute(MyDataset,"Color"))
cat("\n")
print("Expensive:")
print_data(get_attribute(MyDataset,"Expensive"))
MyDataset <- add_attribute(MyDataset,"Shop",c("Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Pepe","Tienda Marlo","Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Marlo","Tienda Marlo"))
MyDataset <- to_factor(MyDataset,"Shop",levels=c("Tienda Pepe","Tienda Marlo"))
print_data(get_attribute(MyDataset,"Shop"))
to_csv(MyDataset,"./tutorial_data/fruits_new.csv",header=TRUE,sep=";")
print("Mean of Weight:")
print(mean1(MyDataset,"Weight"))
print("Median of Weight:")
print(median1(MyDataset,"Weight"))
print("Variance of Weight:")
print(variance1(MyDataset,"Weight"))
cat("\n")
print("Mean of all the numerical attributes:")
print(mean_att(MyDataset))
print("Median of all the numerical attributes:")
print(median_att(MyDataset))
print("Variance of all the numerical attributes:")
print(variance_att(MyDataset))
print("Mode of Color:")
print(mode1(MyDataset,"Color"))
print("Entropy of Color:")
print(entropy1(MyDataset,"Color"))
cat("\n")
print("Mode of all the non-numerical attributes:")
print(mode_att(MyDataset))
print("Entropy of all the non-numerical attributes:")
print(entropy_att(MyDataset))
print("Pearson correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="pearson"))
print("Spearman correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="spearman"))
print("Kendall correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="kendall"))
cat("\n")
print("Pearson correlation matrix:")
mat <- correlation_att(MyDataset,method="pearson")
print(mat)
print("Spearman correlation matrix:")
plot_cor(MyDataset,method="pearson")
print("Normalized mutual information between Fruit and Color:")
print(norm_mutual_info1(MyDataset,"Fruit","Color"))
cat("\n")
print("Normalized mutual information matrix:")
mat <- norm_mutual_info_att(MyDataset)
print(mat)
print("Normalized mutual information matrix:")
plot_norm_mutual_info(MyDataset)
print("AUC for the Weight (Class variable: Expensive):")
print(roc_auc1(MyDataset,"Weight"))
cat("\n")
print("AUC for all the numerical attributes (Class variable: Expensive):")
mat <- roc_auc_att(MyDataset)
print(mat)
print("ROC curve for the Weight:")
plot_roc(MyDataset,"Weight")
print("Weight attribute before normalizing:")
print_data(get_attribute(MyDataset, "Weight"))
cat("\n")
print("Weight attribute after normalizing:")
MyDataset <- normalize1(MyDataset,"Weight")
print_data(get_attribute(MyDataset, "Weight"))
print("Quantity attribute before normalizing:")
print_data(get_attribute(MyDataset, "Quantity"))
cat("\n")
print("Weight attribute after standarizing:")
MyDataset <- standarize1(MyDataset,"Quantity")
print_data(get_attribute(MyDataset, "Quantity"))
print("Dataset before discretizing:")
print_dataset(MyDataset)
cat("\n")
print("Dataset after discretizing:")
MyDataset <- discretize1(MyDataset,"Code",method="frequency",num_bins=5)
MyDataset <- discretize1(MyDataset,"Quantity",method="custom",cut_points=c(-1,0,1))
MyDataset <- discretize1(MyDataset,"Weight",method="width",num_bins=4)
print_dataset(MyDataset)
print("Entropy of the non-numerical attributes (including the discretized variables):")
print(entropy_att(MyDataset))
MyDataset <- filter_by(MyDataset,metric="entropy",threshold=2,comparator="gt")
cat("\n")
print("Dataset after applying the filter:")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Code")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Fruit")
print_dataset(MyDataset)
MyDataset <- remove_attribute(MyDataset,"Expensive")
print_dataset(MyDataset)
print(MyDataset@length)
MyDataset <- remove_attribute(MyDataset,"Code")
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
t <- to_dataframe(MyDataset)
View(t)
class(t)
print("Code:")
print_data(get_attribute(MyDataset,"Code"))
cat("\n")
print("Fruit:")
print_data(get_attribute(MyDataset,"Fruit"))
cat("\n")
print("Quantity:")
print_data(get_attribute(MyDataset,"Quantity"))
cat("\n")
print("Weight:")
print_data(get_attribute(MyDataset,"Weight"))
cat("\n")
print("Color:")
print_data(get_attribute(MyDataset,"Color"))
cat("\n")
print("Expensive:")
print_data(get_attribute(MyDataset,"Expensive"))
MyDataset <- add_attribute(MyDataset,"Shop",c("Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Pepe","Tienda Marlo","Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Marlo","Tienda Marlo"))
MyDataset <- to_factor(MyDataset,"Shop",levels=c("Tienda Pepe","Tienda Marlo"))
print_data(get_attribute(MyDataset,"Shop"))
to_csv(MyDataset,"./tutorial_data/fruits_new.csv",header=TRUE,sep=";")
print("Mean of Weight:")
print(mean1(MyDataset,"Weight"))
print("Median of Weight:")
print(median1(MyDataset,"Weight"))
print("Variance of Weight:")
print(variance1(MyDataset,"Weight"))
cat("\n")
print("Mean of all the numerical attributes:")
print(mean_att(MyDataset))
print("Median of all the numerical attributes:")
print(median_att(MyDataset))
print("Variance of all the numerical attributes:")
print(variance_att(MyDataset))
print("Mode of Color:")
print(mode1(MyDataset,"Color"))
print("Entropy of Color:")
print(entropy1(MyDataset,"Color"))
cat("\n")
print("Mode of all the non-numerical attributes:")
print(mode_att(MyDataset))
print("Entropy of all the non-numerical attributes:")
print(entropy_att(MyDataset))
print("Pearson correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="pearson"))
print("Spearman correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="spearman"))
print("Kendall correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="kendall"))
cat("\n")
print("Pearson correlation matrix:")
mat <- correlation_att(MyDataset,method="pearson")
print(mat)
print("Spearman correlation matrix:")
plot_cor(MyDataset,method="pearson")
print("Normalized mutual information between Fruit and Color:")
print(norm_mutual_info1(MyDataset,"Fruit","Color"))
cat("\n")
print("Normalized mutual information matrix:")
mat <- norm_mutual_info_att(MyDataset)
print(mat)
print("Normalized mutual information matrix:")
plot_norm_mutual_info(MyDataset)
print("AUC for the Weight (Class variable: Expensive):")
print(roc_auc1(MyDataset,"Weight"))
cat("\n")
print("AUC for all the numerical attributes (Class variable: Expensive):")
mat <- roc_auc_att(MyDataset)
print(mat)
print("ROC curve for the Weight:")
plot_roc(MyDataset,"Weight")
print("Weight attribute before normalizing:")
print_data(get_attribute(MyDataset, "Weight"))
cat("\n")
print("Weight attribute after normalizing:")
MyDataset <- normalize1(MyDataset,"Weight")
print_data(get_attribute(MyDataset, "Weight"))
print("Quantity attribute before normalizing:")
print_data(get_attribute(MyDataset, "Quantity"))
cat("\n")
print("Weight attribute after standarizing:")
MyDataset <- standarize1(MyDataset,"Quantity")
print_data(get_attribute(MyDataset, "Quantity"))
print("Dataset before discretizing:")
print_dataset(MyDataset)
cat("\n")
print("Dataset after discretizing:")
MyDataset <- discretize1(MyDataset,"Code",method="frequency",num_bins=5)
MyDataset <- discretize1(MyDataset,"Quantity",method="custom",cut_points=c(-1,0,1))
MyDataset <- discretize1(MyDataset,"Weight",method="width",num_bins=4)
print_dataset(MyDataset)
print("Entropy of the non-numerical attributes (including the discretized variables):")
print(entropy_att(MyDataset))
MyDataset <- filter_by(MyDataset,metric="entropy",threshold=2,comparator="gt")
cat("\n")
print("Dataset after applying the filter:")
print_dataset(MyDataset)
print(MyDataset@length)
MyDataset <- remove_attribute(MyDataset,"Code")
print_dataset(MyDataset)
print(MyDataset@length)
MyDataset <- remove_attribute(MyDataset,"Fruit")
print_dataset(MyDataset)
print(MyDataset@length)
MyDataset <- remove_attribute(MyDataset,"Expensive")
print_dataset(MyDataset)
print(MyDataset@length)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
t <- to_dataframe(MyDataset)
View(t)
class(t)
print("Code:")
print_data(get_attribute(MyDataset,"Code"))
cat("\n")
print("Fruit:")
print_data(get_attribute(MyDataset,"Fruit"))
cat("\n")
print("Quantity:")
print_data(get_attribute(MyDataset,"Quantity"))
cat("\n")
print("Weight:")
print_data(get_attribute(MyDataset,"Weight"))
cat("\n")
print("Color:")
print_data(get_attribute(MyDataset,"Color"))
cat("\n")
print("Expensive:")
print_data(get_attribute(MyDataset,"Expensive"))
MyDataset <- add_attribute(MyDataset,"Shop",c("Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Pepe","Tienda Marlo","Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Marlo","Tienda Marlo"))
MyDataset <- to_factor(MyDataset,"Shop",levels=c("Tienda Pepe","Tienda Marlo"))
print_data(get_attribute(MyDataset,"Shop"))
to_csv(MyDataset,"./tutorial_data/fruits_new.csv",header=TRUE,sep=";")
print("Mean of Weight:")
print(mean1(MyDataset,"Weight"))
print("Median of Weight:")
print(median1(MyDataset,"Weight"))
print("Variance of Weight:")
print(variance1(MyDataset,"Weight"))
cat("\n")
print("Mean of all the numerical attributes:")
print(mean_att(MyDataset))
print("Median of all the numerical attributes:")
print(median_att(MyDataset))
print("Variance of all the numerical attributes:")
print(variance_att(MyDataset))
print("Mode of Color:")
print(mode1(MyDataset,"Color"))
print("Entropy of Color:")
print(entropy1(MyDataset,"Color"))
cat("\n")
print("Mode of all the non-numerical attributes:")
print(mode_att(MyDataset))
print("Entropy of all the non-numerical attributes:")
print(entropy_att(MyDataset))
print("Pearson correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="pearson"))
print("Spearman correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="spearman"))
print("Kendall correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="kendall"))
cat("\n")
print("Pearson correlation matrix:")
mat <- correlation_att(MyDataset,method="pearson")
print(mat)
print("Spearman correlation matrix:")
plot_cor(MyDataset,method="pearson")
print("Normalized mutual information between Fruit and Color:")
print(norm_mutual_info1(MyDataset,"Fruit","Color"))
cat("\n")
print("Normalized mutual information matrix:")
mat <- norm_mutual_info_att(MyDataset)
print(mat)
print("Normalized mutual information matrix:")
plot_norm_mutual_info(MyDataset)
print("AUC for the Weight (Class variable: Expensive):")
print(roc_auc1(MyDataset,"Weight"))
cat("\n")
print("AUC for all the numerical attributes (Class variable: Expensive):")
mat <- roc_auc_att(MyDataset)
print(mat)
print("ROC curve for the Weight:")
plot_roc(MyDataset,"Weight")
print("Weight attribute before normalizing:")
print_data(get_attribute(MyDataset, "Weight"))
cat("\n")
print("Weight attribute after normalizing:")
MyDataset <- normalize1(MyDataset,"Weight")
print_data(get_attribute(MyDataset, "Weight"))
print("Quantity attribute before normalizing:")
print_data(get_attribute(MyDataset, "Quantity"))
cat("\n")
print("Weight attribute after standarizing:")
MyDataset <- standarize1(MyDataset,"Quantity")
print_data(get_attribute(MyDataset, "Quantity"))
print("Dataset before discretizing:")
print_dataset(MyDataset)
cat("\n")
print("Dataset after discretizing:")
MyDataset <- discretize1(MyDataset,"Code",method="frequency",num_bins=5)
MyDataset <- discretize1(MyDataset,"Quantity",method="custom",cut_points=c(-1,0,1))
MyDataset <- discretize1(MyDataset,"Weight",method="width",num_bins=4)
print_dataset(MyDataset)
print("Entropy of the non-numerical attributes (including the discretized variables):")
print(entropy_att(MyDataset))
MyDataset <- filter_by(MyDataset,metric="entropy",threshold=2,comparator="gt")
cat("\n")
print("Dataset after applying the filter:")
print_dataset(MyDataset)
source("../R/attributes.R")
source("../R/dataset.R")
source("../R/plots.R")
MyDataset <- from_csv("./tutorial_data/fruits.csv",cat=5,c="Expensive")
t <- read.table("./tutorial_data/fruits.csv",sep=",",header=TRUE)
MyDataset2 <- dataset(t,c="Expensive")
print_dataset(MyDataset)
t <- to_dataframe(MyDataset)
print(t)
class(t)
print("Code:")
print_data(get_attribute(MyDataset,"Code"))
cat("\n")
print("Fruit:")
print_data(get_attribute(MyDataset,"Fruit"))
cat("\n")
print("Quantity:")
print_data(get_attribute(MyDataset,"Quantity"))
cat("\n")
print("Weight:")
print_data(get_attribute(MyDataset,"Weight"))
cat("\n")
print("Color:")
print_data(get_attribute(MyDataset,"Color"))
cat("\n")
print("Expensive:")
print_data(get_attribute(MyDataset,"Expensive"))
MyDataset <- add_attribute(MyDataset,"Shop",c("Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Pepe","Tienda Marlo","Tienda Marlo","Tienda Marlo","Tienda Pepe","Tienda Marlo","Tienda Marlo"))
MyDataset <- to_factor(MyDataset,"Shop",levels=c("Tienda Pepe","Tienda Marlo"))
print_data(get_attribute(MyDataset,"Shop"))
to_csv(MyDataset,"./tutorial_data/fruits_new.csv",header=TRUE,sep=";")
print("Mean of Weight:")
print(mean1(MyDataset,"Weight"))
print("Median of Weight:")
print(median1(MyDataset,"Weight"))
print("Variance of Weight:")
print(variance1(MyDataset,"Weight"))
cat("\n")
print("Mean of all the numerical attributes:")
print(mean_att(MyDataset))
print("Median of all the numerical attributes:")
print(median_att(MyDataset))
print("Variance of all the numerical attributes:")
print(variance_att(MyDataset))
print("Mode of Color:")
print(mode1(MyDataset,"Color"))
print("Entropy of Color:")
print(entropy1(MyDataset,"Color"))
cat("\n")
print("Mode of all the non-numerical attributes:")
print(mode_att(MyDataset))
print("Entropy of all the non-numerical attributes:")
print(entropy_att(MyDataset))
print("Pearson correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="pearson"))
print("Spearman correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="spearman"))
print("Kendall correlation between Weight and Quantity:")
print(correlation1(MyDataset,"Weight","Quantity",method="kendall"))
cat("\n")
print("Pearson correlation matrix:")
mat <- correlation_att(MyDataset,method="pearson")
print(mat)
print("Spearman correlation matrix:")
plot_cor(MyDataset,method="pearson")
print("Normalized mutual information between Fruit and Color:")
print(norm_mutual_info1(MyDataset,"Fruit","Color"))
cat("\n")
print("Normalized mutual information matrix:")
mat <- norm_mutual_info_att(MyDataset)
print(mat)
print("Normalized mutual information matrix:")
plot_norm_mutual_info(MyDataset)
print("AUC for the Weight (Class variable: Expensive):")
print(roc_auc1(MyDataset,"Weight"))
cat("\n")
print("AUC for all the numerical attributes (Class variable: Expensive):")
mat <- roc_auc_att(MyDataset)
print(mat)
print("ROC curve for the Weight:")
plot_roc(MyDataset,"Weight")
print("Weight attribute before normalizing:")
print_data(get_attribute(MyDataset, "Weight"))
cat("\n")
print("Weight attribute after normalizing:")
MyDataset <- normalize1(MyDataset,"Weight")
print_data(get_attribute(MyDataset, "Weight"))
print("Quantity attribute before normalizing:")
print_data(get_attribute(MyDataset, "Quantity"))
cat("\n")
print("Weight attribute after standarizing:")
MyDataset <- standarize1(MyDataset,"Quantity")
print_data(get_attribute(MyDataset, "Quantity"))
print("Dataset before discretizing:")
print_dataset(MyDataset)
cat("\n")
print("Dataset after discretizing:")
MyDataset <- discretize1(MyDataset,"Code",method="frequency",num_bins=5)
MyDataset <- discretize1(MyDataset,"Quantity",method="custom",cut_points=c(-1,0,1))
MyDataset <- discretize1(MyDataset,"Weight",method="width",num_bins=4)
print_dataset(MyDataset)
print("Entropy of the non-numerical attributes (including the discretized variables):")
print(entropy_att(MyDataset))
MyDataset <- filter_by(MyDataset,metric="entropy",threshold=2,comparator="gt")
cat("\n")
print("Dataset after applying the filter:")
print_dataset(MyDataset)
